@page "/addproduct"

@inject AddProductUseCase AddProductUseCase
@inject NavigationManager NavigationManager


<h3>Add Product</h3>
<br />


@if (this.product != null)
{
    <EditForm Model="product" OnValidSubmit="OnValidSubmit">
        <DataAnnotationsValidator></DataAnnotationsValidator>
        <ValidationSummary></ValidationSummary>

        <div class="form-group">
            <label for="name">Product name</label>
            <InputText id="name" @bind-Value="product.ProductName" class="form-control"></InputText>
        </div>

        <div class="form-group">
            <label for="name">Product quantity</label>
            <InputNumber id="qty" @bind-Value="product.Quantity" class="form-control"></InputNumber>
        </div>

        <div class="form-group">
            <label for="price">Product price</label>
            <InputNumber id="price" @bind-Value="product.Price" class="form-control"></InputNumber>
        </div>

        <div class="form-group">
            <label >Inventories</label>
            <ViewInventoriesComponent
                DisplaySearhcTesult="true"
                OnSelectInventory="OnSelectInventory"></ViewInventoriesComponent>
        </div>


        <ul>

            <li></li>
        </ul>

        <br />
        <button type="submit" class="btn btn-primary">Save</button>

    </EditForm>
}

@code {
    private Product? product;

    protected override void OnInitialized()
    {
        this.product = new Product();
    }

    private async Task OnValidSubmit()
    {
        if(this.product != null)
        {
            await AddProductUseCase.ExecuteAsync(this.product);
            NavigationManager.NavigateTo("/products");
        }
    }

    private void OnSelectInventory(Inventory inventory)
    {
        
    }

}
