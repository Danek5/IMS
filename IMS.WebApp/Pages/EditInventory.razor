@page "/editinventory/{invId:int}"

@inject IViewInventoryByIdUseCase ViewInventoryByIdUseCase

<h3>Edit Inventory</h3>

@if(this.inventory != null)
{

    <EditForm Model="inventory" OnValidSubmit="OnValidSubmit">
        <DataAnnotationsValidator></DataAnnotationsValidator>
        <ValidationSummary></ValidationSummary>

        <div class="form-group">
            <label for="name">Inventory name</label>
            <InputText id="name" @bind-Value="inventory.InventoryName" class="form-control"></InputText>
        </div>

        <div class="form-group">
            <label for="name">Inventory quantity</label>
            <InputNumber id="qty" @bind-Value="inventory.Quantity" class="form-control"></InputNumber>
        </div>

        <div class="form-group">
            <label for="name">Inventory price</label>
            <InputNumber id="price" @bind-Value="inventory.Price" class="form-control"></InputNumber>
        </div>

        <br />
        <button type="button" class="btn btn-primary">Save</button>

    </EditForm>

}

@code {
    [Parameter]
    public int InvId { get; set; }

    private Inventory? inventory;

    public async Task OnInitializedAsync()
    {
        this.inventory = await ViewInventoryByIdUseCase.ExecuteAsync(InvId);
    }

    public void OnValidSubmit()
    {
        EditInventoryUseCase.ExecuteAsync(this.inventory);
    }
}
